@page "/settings"
@inject ISettingsService SettingsService
@inject IThemeService ThemeService
@inject IJSRuntime JSRuntime

<div class="container mx-auto px-4 py-8">
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 transition-colors duration-200 hover:shadow-lg">
        <h3 class="text-4xl font-bold text-primary-600 mb-6 transition-colors duration-200">设置</h3>

        @if (settings != null)
        {
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 transition-colors duration-200">番茄钟时长 (分钟):</label>
                    <input type="number" @bind="settings.PomodoroDuration"
                           class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-all duration-200 hover:shadow-md hover:border-blue-400" />
                </div>
                
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 transition-colors duration-200">OpenAI API Key:</label>
                    <input type="password" @bind="settings.ApiKey" placeholder="sk-..."
                           class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-all duration-200 hover:shadow-md hover:border-blue-400" />
                </div>

                <div class="space-y-2 sm:col-span-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 transition-colors duration-200">API Base URL (可选):</label>
                    <input type="text" @bind="settings.ApiBaseUrl" placeholder="例如 https://api.openai.com/v1"
                           class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-all duration-200 hover:shadow-md hover:border-blue-400" />
                </div>

                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 transition-colors duration-200">主题:</label>
                    <select @bind="settings.Theme"
                            class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-all duration-200 hover:shadow-md hover:border-blue-400">
                        <option value="System">跟随系统</option>
                        <option value="Light">亮色模式</option>
                        <option value="Dark">暗色模式</option>
                    </select>
                </div>
            </div>
            
            <div class="mt-6 flex items-center space-x-4">
                <button @onclick="Save" class="px-6 py-3 bg-green-500 hover:bg-green-600 text-white rounded-md shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 active:scale-95">
                    保存设置
                </button>
                @if(showSaveConfirmation)
                {
                    <span class="text-green-600 dark:text-green-400 font-medium transition-all duration-200 animate-pulse">已保存!</span>
                }
            </div>
        }
        else
        {
            <div class="flex items-center justify-center py-8">
                <div class="text-gray-600 dark:text-gray-400">正在加载设置...</div>
            </div>
        }
    </div>
</div>


@code {
    private AppSettings settings;
    private bool showSaveConfirmation = false;

    protected override void OnInitialized()
    {
        // 创建一个副本进行编辑，以避免在保存前修改全局状态
        settings = new AppSettings
        {
            PomodoroDuration = SettingsService.CurrentSettings.PomodoroDuration,
            ApiKey = SettingsService.CurrentSettings.ApiKey,
            ApiBaseUrl = SettingsService.CurrentSettings.ApiBaseUrl,
            Theme = SettingsService.CurrentSettings.Theme
        };
    }

    private async Task Save()
    {
        // 将编辑后的设置复制回全局服务
        SettingsService.CurrentSettings.PomodoroDuration = settings.PomodoroDuration;
        SettingsService.CurrentSettings.ApiKey = settings.ApiKey;
        SettingsService.CurrentSettings.ApiBaseUrl = settings.ApiBaseUrl;
        SettingsService.CurrentSettings.Theme = settings.Theme;

        await SettingsService.SaveSettingsAsync();

        await ThemeService.SetThemeAsync(settings.Theme, JSRuntime);

        showSaveConfirmation = true;
        await Task.Delay(2000); // 显示 "已保存" 2秒钟
        showSaveConfirmation = false;
        StateHasChanged();
    }
}
